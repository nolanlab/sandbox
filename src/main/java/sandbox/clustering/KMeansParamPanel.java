/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KMeansParamPanel.java
 *
 * Created on 01-Dec-2009, 22:57:50
 */
package sandbox.clustering;

import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Nikolay
 */
public class KMeansParamPanel extends javax.swing.JPanel {

    /**
     * Creates new form KMeansParamPanel
     */
    public KMeansParamPanel() {
        initComponents();
    }

    public int[] getKValues() {

        int from = (Integer) ((SpinnerNumberModel) spinFKFrom.getModel()).getNumber();
        int to = (Integer) ((SpinnerNumberModel) spinFKTo.getModel()).getNumber();
        int steps = (Integer) ((SpinnerNumberModel) spinFKStep.getModel()).getNumber();
        double step = (steps == 1) ? 0 : ((double) to - (double) from) / (double) (steps - 1);

        int[] out = new int[steps];
        for (int i = 0; i < steps; i++) {
            Double K = new Double((int) (from + (step * i)));
            out[i] = (int) Math.round(K);
        }
        return out;
    }

    public int getPrecision() {
        return (Integer) spinNumIter.getModel().getValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        spinFKFrom = new javax.swing.JSpinner();
        spinFKTo = new javax.swing.JSpinner();
        spinNumIter = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        spinFKStep = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(250, 90));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(250, 90));
        setLayout(new java.awt.GridBagLayout());

        spinFKFrom.setModel(new javax.swing.SpinnerNumberModel(2, 1, null, 1));
        spinFKFrom.setMaximumSize(new java.awt.Dimension(60, 25));
        spinFKFrom.setMinimumSize(new java.awt.Dimension(60, 25));
        spinFKFrom.setPreferredSize(new java.awt.Dimension(60, 25));
        spinFKFrom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFKFromStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        add(spinFKFrom, gridBagConstraints);

        spinFKTo.setModel(new javax.swing.SpinnerNumberModel(11, 2, null, 1));
        spinFKTo.setMaximumSize(new java.awt.Dimension(60, 25));
        spinFKTo.setMinimumSize(new java.awt.Dimension(60, 25));
        spinFKTo.setPreferredSize(new java.awt.Dimension(60, 25));
        spinFKTo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFKToStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        add(spinFKTo, gridBagConstraints);

        spinNumIter.setModel(new javax.swing.SpinnerNumberModel(10, 1, null, 1));
        spinNumIter.setToolTipText("Each step will be run N times with random initialization, and the best result of all iterations will be chosen");
        spinNumIter.setMaximumSize(new java.awt.Dimension(60, 25));
        spinNumIter.setMinimumSize(new java.awt.Dimension(60, 25));
        spinNumIter.setPreferredSize(new java.awt.Dimension(60, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 6, 2, 8);
        add(spinNumIter, gridBagConstraints);

        jLabel11.setForeground(new java.awt.Color(0, 51, 102));
        jLabel11.setText("K");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(6, 8, 7, 4);
        add(jLabel11, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(0, 51, 102));
        jLabel7.setText("From");
        jLabel7.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(60, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 2, 0);
        add(jLabel7, gridBagConstraints);

        jLabel8.setForeground(new java.awt.Color(0, 51, 102));
        jLabel8.setText("To");
        jLabel8.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel8.setPreferredSize(new java.awt.Dimension(60, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 2, 0);
        add(jLabel8, gridBagConstraints);

        jLabel9.setForeground(new java.awt.Color(0, 51, 102));
        jLabel9.setText("Num. iterations");
        jLabel9.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel9.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(4, 6, 3, 7);
        add(jLabel9, gridBagConstraints);

        spinFKStep.setModel(new javax.swing.SpinnerNumberModel(10, 1, null, 1));
        spinFKStep.setMaximumSize(new java.awt.Dimension(60, 25));
        spinFKStep.setMinimumSize(new java.awt.Dimension(60, 25));
        spinFKStep.setPreferredSize(new java.awt.Dimension(60, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        add(spinFKStep, gridBagConstraints);

        jLabel10.setForeground(new java.awt.Color(0, 51, 102));
        jLabel10.setText("Steps");
        jLabel10.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel10.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel10.setPreferredSize(new java.awt.Dimension(60, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 2, 0);
        add(jLabel10, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void spinFKFromStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFKFromStateChanged
        ((SpinnerNumberModel) spinFKTo.getModel()).setMinimum((Integer) spinFKFrom.getValue());
}//GEN-LAST:event_spinFKFromStateChanged

    private void spinFKToStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFKToStateChanged
        ((SpinnerNumberModel) spinFKFrom.getModel()).setMaximum((Integer) spinFKTo.getValue());
}//GEN-LAST:event_spinFKToStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner spinFKFrom;
    private javax.swing.JSpinner spinFKStep;
    private javax.swing.JSpinner spinFKTo;
    private javax.swing.JSpinner spinNumIter;
    // End of variables declaration//GEN-END:variables
}
