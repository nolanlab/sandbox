

package samusik.glasscmp;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;

/**
 *
 * @author  Kola
 */
public class GlassListSelector<T> extends JPanel {
    private static final long serialVersionUID = 1L;

    public DefaultListModel getAvailableListModel() { return (DefaultListModel)lstAvailable.getModel();}
    public ArrayList<T> getSelectedItems() {
        DefaultListModel tmp = (DefaultListModel)lstSelected.getModel();
        ArrayList<T> lst = new ArrayList<T>();
        for(int i = 0; i<tmp.getSize();i++)lst.add((T)tmp.get(i));
        return lst;
    }
    
    public void clear(){((DefaultListModel)lstAvailable.getModel()).removeAllElements();((DefaultListModel)lstSelected.getModel()).removeAllElements();}
    
    public DefaultListModel getSelectedListModel(){
        return (DefaultListModel) lstSelected.getModel();
    }

    /** Creates new form BeanForm */
    public GlassListSelector() {
        initComponents();
        this.jPanel3.setBackground(new Color(255,255,255,0));
        this.setBackground(new Color(255,255,255,0));
    }
    public GlassListSelector(T[] availableItems) {
        initComponents();
        for(T f: availableItems)((DefaultListModel)lstAvailable.getModel()).addElement(f);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane8 = new javax.swing.JScrollPane();
        lstSelected = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        cmdSelAll = new samusik.glasscmp.GlassButton();
        cmdSelOne = new samusik.glasscmp.GlassButton();
        cmdDeselOne = new samusik.glasscmp.GlassButton();
        cmdDeselAll = new samusik.glasscmp.GlassButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        lstAvailable = new javax.swing.JList();

        setMinimumSize(new java.awt.Dimension(80, 120));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(80, 120));
        setLayout(new java.awt.GridBagLayout());

        jScrollPane8.setPreferredSize(new java.awt.Dimension(1, 1));

        lstSelected.setModel(new DefaultListModel());
        lstSelected.setDragEnabled(true);
        jScrollPane8.setViewportView(lstSelected);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane8, gridBagConstraints);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        cmdSelAll.setText(">>");
        cmdSelAll.setMaximumSize(new java.awt.Dimension(41, 30));
        cmdSelAll.setMinimumSize(new java.awt.Dimension(41, 30));
        cmdSelAll.setPreferredSize(new java.awt.Dimension(41, 30));
        cmdSelAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelAllActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 3, 5);
        jPanel3.add(cmdSelAll, gridBagConstraints);

        cmdSelOne.setText(">");
        cmdSelOne.setMaximumSize(new java.awt.Dimension(41, 30));
        cmdSelOne.setMinimumSize(new java.awt.Dimension(41, 30));
        cmdSelOne.setPreferredSize(new java.awt.Dimension(41, 30));
        cmdSelOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSelOneActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPanel3.add(cmdSelOne, gridBagConstraints);

        cmdDeselOne.setText("<");
        cmdDeselOne.setMaximumSize(new java.awt.Dimension(41, 30));
        cmdDeselOne.setMinimumSize(new java.awt.Dimension(41, 30));
        cmdDeselOne.setPreferredSize(new java.awt.Dimension(41, 30));
        cmdDeselOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeselOneActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPanel3.add(cmdDeselOne, gridBagConstraints);

        cmdDeselAll.setText("<<");
        cmdDeselAll.setMaximumSize(new java.awt.Dimension(41, 30));
        cmdDeselAll.setMinimumSize(new java.awt.Dimension(41, 30));
        cmdDeselAll.setPreferredSize(new java.awt.Dimension(41, 30));
        cmdDeselAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeselAllActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 5);
        jPanel3.add(cmdDeselAll, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        add(jPanel3, gridBagConstraints);

        jScrollPane7.setPreferredSize(new java.awt.Dimension(1, 1));

        lstAvailable.setModel(new DefaultListModel());
        lstAvailable.setDragEnabled(true);
        jScrollPane7.setViewportView(lstAvailable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jScrollPane7, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSelAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelAllActionPerformed
        DefaultListModel modAva = (DefaultListModel) lstAvailable.getModel();
        DefaultListModel modSel = (DefaultListModel) lstSelected.getModel();
        for (int i = 0; i < modAva.getSize(); i++) {
            modSel.addElement((T)modAva.get(i));
        }
        modAva.removeAllElements();
        // TODO add your handling code here:
    }//GEN-LAST:event_cmdSelAllActionPerformed

    private void cmdSelOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSelOneActionPerformed
        int[] selList = lstAvailable.getSelectedIndices();
        if (selList.length > 0) {
            DefaultListModel modAva = (DefaultListModel) lstAvailable.getModel();
            DefaultListModel modSel = (DefaultListModel) lstSelected.getModel();
            
            for (int f : selList) {
                modSel.addElement((T)modAva.get(f));
            }
            for (int i = 0; i < selList.length; i++) {
                modAva.remove(selList[i]-i);
                
            }
        }
    }//GEN-LAST:event_cmdSelOneActionPerformed

    private void cmdDeselOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeselOneActionPerformed
        int[] selList = lstSelected.getSelectedIndices();
        if (selList.length > 0) {
            DefaultListModel modAva = (DefaultListModel) lstAvailable.getModel();
            DefaultListModel modSel = (DefaultListModel) lstSelected.getModel();
            
            for (int f : selList) {
                modAva.addElement((T)modSel.get(f));
                
            }
            for (int i = 0; i < selList.length; i++) {
                modSel.remove(selList[i]-i);
                
            }
        }
    }//GEN-LAST:event_cmdDeselOneActionPerformed

    private void cmdDeselAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeselAllActionPerformed
        DefaultListModel modAva = (DefaultListModel) lstAvailable.getModel();
        DefaultListModel modSel = (DefaultListModel) lstSelected.getModel();
        
        for (int i = 0; i < modSel.getSize(); i++) {
            modAva.addElement((T)modSel.get(i));
        }
        modSel.removeAllElements();
    }//GEN-LAST:event_cmdDeselAllActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private samusik.glasscmp.GlassButton cmdDeselAll;
    private samusik.glasscmp.GlassButton cmdDeselOne;
    private samusik.glasscmp.GlassButton cmdSelAll;
    private samusik.glasscmp.GlassButton cmdSelOne;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JList lstAvailable;
    private javax.swing.JList lstSelected;
    // End of variables declaration//GEN-END:variables
    
}
